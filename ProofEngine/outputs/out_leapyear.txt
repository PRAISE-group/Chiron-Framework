(declare-fun isDivby100 () Int)
(declare-fun isDivby4 () Int)
(declare-fun isDivby400 () Int)
(declare-fun isLeap1 () Int)
(declare-fun isLeap2 () Int)
(declare-fun mod100 () Int)
(declare-fun mod100n () Int)
(declare-fun mod4 () Int)
(declare-fun mod400 () Int)
(declare-fun mod400n () Int)
(declare-fun mod4n () Int)
(declare-fun year () Int)
(assert (= mod4 (- (- year 1) (* (div (- year 1) 4) 4))))
(assert (= mod100 (- (- year 1) (* (div (- year 1) 100) 100))))
(assert (= mod400 (- (- year 1) (* (div (- year 1) 400) 400))))
(assert (= isLeap1 (+ (- (div (+ mod4 1) 4) (div (+ mod100 1) 100)) (div (+ mod400 1) 400))))
(assert (= mod4n (- year (* (div year 4) 4))))
(assert (= mod100n (- year (* (div year 100) 100))))
(assert (= mod400n (- year (* (div year 400) 400))))
(assert (= isDivby4 (ite (= mod4n 0) 1 0)))
(assert (= isDivby100 (ite (= mod100n 0) 1 0)))
(assert (= isDivby400 (ite (= mod400n 0) 1 0)))
(assert (= isLeap2 (ite (or (and (= isDivby4 1) (not (= isDivby100 1))) (= isDivby400 1)) 1 0)))
(assert (and (not (= isLeap1 isLeap2)) (> year 0)))
(check-sat)
(get-model)
