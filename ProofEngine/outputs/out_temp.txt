(declare-fun __rep_counter_1 () Int)
(declare-fun ans () Int)
(declare-fun k () Int)
(declare-fun n1 () Int)
(declare-fun n_in () Int)
(declare-fun n_out () Int)
(declare-fun s1 () Int)
(declare-fun s_in () Int)
(declare-fun s_out () Int)
(declare-fun x () Int)
(assert (not (and (=> (and  (= s_in 0) (and (>= n1 0) (and (< n_in 100000) (>= k 5)))) (= (- (+ s_in n_in) (* (div (+ s_in n_in) 3) 3)) 0)) (=> (and (= x (- n_in (* (div n_in 10) 10))) (= s1 (+ s_in x)) (= n1 (div n_in 10)) (= n_out n1) (= s_out s1) (> __rep_counter_1 0) (<= __rep_counter_1 k) (= (- (+ s_in n_in) (* (div (+ s_in n_in) 3) 3)) 0)) (= (- (+ s_out n_out) (* (div (+ s_out n_out) 3) 3)) 0)) (=> (and (= x (- n_in (* (div n_in 10) 10))) (= s1 (+ s_in x)) (= n1 (div n_in 10)) (= n_out n1) (= s_out s1) (not (and (> __rep_counter_1 0) (<= __rep_counter_1 k) true))) (and (= ans (ite (= (- s_out (* (div s_out 3) 3)) 0) 1 0)) (and (or (= ans 1) (= ans 0)) (and (or (= (- n_out (* (div n_out 3) 3)) 0) (= ans 0)) (or (= ans 1) (not (= (- n_out (* (div n_out 3) 3)) 0))))))) )))
(check-sat)
(get-model)